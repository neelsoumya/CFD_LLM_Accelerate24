
"""
Function to plot ARC/ConceptARC tasks given json file

Author: Soumya Banerjee

"""

import matplotlib.pyplot as plt
import numpy as np
import json

def visualize_grid(grid, title="Grid Visualization", str_filename="arcexample.png"):
    """
    Function to plot ARC/ConceptARC task given a grid of number
    :param grid: numpy array
    :param title: title of plot
    :param str_filename: filename in which to save
    :return: Null
    """
    plt.figure(figsize=(6, 6))
    plt.imshow(grid, cmap="tab10", origin="upper")
    plt.colorbar()
    plt.title(title)
    plt.xticks([])
    plt.yticks([])
    #plt.show()
    plt.savefig(str_filename)


# Example JSON data (Replace with actual JSON data)
#puzzle_json = """
#{"train":[{"input":[[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,4,4,4,4,0,0,0,0,0],[0,0,0,4,4,4,4,0,0,0,0,0],[0,0,0,4,4,4,4,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0],[2,2,2,2,2,2,2,2,2,2,2,2],[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,4,4,4,4,0,0,4,4,4],[0,0,0,4,4,4,4,0,0,4,4,4],[0,0,0,4,4,4,4,0,0,4,4,4]],"output":[[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,4,4,4,4,0,0,0,0,0],[0,0,0,4,4,4,4,0,0,0,0,0],[0,0,0,4,4,4,4,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0],[2,2,2,2,2,2,2,2,2,2,2,2],[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0]]}]}
#"""

# from https://github.com/victorvikram/ConceptARC/blob/main/corpus/AboveBelow/AboveBelow1.json
puzzle_json =  """
{"train":[{"input":[[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,4,4,4,4,0,0,0,0,0],[0,0,0,4,4,4,4,0,0,0,0,0],[0,0,0,4,4,4,4,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0],[2,2,2,2,2,2,2,2,2,2,2,2],[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,4,4,4,4,0,0,4,4,4],[0,0,0,4,4,4,4,0,0,4,4,4],[0,0,0,4,4,4,4,0,0,4,4,4]],"output":[[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,4,4,4,4,0,0,0,0,0],[0,0,0,4,4,4,4,0,0,0,0,0],[0,0,0,4,4,4,4,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0],[2,2,2,2,2,2,2,2,2,2,2,2],[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0]]},{"input":[[0,0,0,6,6,6,0,0,0,6,6,6,6,0,6,6],[0,0,0,6,6,6,0,0,0,6,6,6,6,0,6,6],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],[0,0,6,6,6,0,0,0,0,0,6,6,6,6,0,0],[0,0,6,6,6,0,0,0,0,0,6,6,6,6,0,0],[0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,0],[0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,0],[0,0,6,6,0,0,6,6,0,0,6,6,6,6,0,0],[0,0,6,6,0,0,6,6,0,0,0,0,0,0,0,0],[0,0,6,6,0,0,6,6,0,0,0,0,0,0,0,0]],"output":[[0,0,0,6,6,6,0,0,0,6,6,6,6,0,6,6],[0,0,0,6,6,6,0,0,0,6,6,6,6,0,6,6],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]]},{"input":[[0,0,1,1,1,0,0,0,0,0,0,0,1,1,0,0],[0,0,1,1,1,0,0,1,1,1,0,0,1,1,0,0],[0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0],[8,0,8,0,8,0,8,0,8,0,8,0,8,0,8,0],[1,1,0,1,1,1,0,0,0,1,1,1,0,0,0,0],[1,1,0,1,1,1,0,0,0,1,1,1,0,0,0,0],[1,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]],"output":[[0,0,1,1,1,0,0,0,0,0,0,0,1,1,0,0],[0,0,1,1,1,0,0,1,1,1,0,0,1,1,0,0],[0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0],[8,0,8,0,8,0,8,0,8,0,8,0,8,0,8,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]]}],"test":[{"input":[[0,6,6,0,0,6,6,6,0,6],[0,6,6,0,0,6,6,6,0,6],[0,0,0,0,0,6,6,6,0,0],[4,4,4,4,4,4,4,4,4,4],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,6,6,6,0,0,6,6,6,0],[0,6,6,6,0,0,6,6,6,0],[0,6,6,6,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,6,6,6,6,0,0,0,0,0],[0,6,6,6,6,0,0,0,0,0],[0,6,6,6,6,0,0,0,0,0]],"output":[[0,6,6,0,0,6,6,6,0,6],[0,6,6,0,0,6,6,6,0,6],[0,0,0,0,0,6,6,6,0,0],[4,4,4,4,4,4,4,4,4,4],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0]]},{"input":[[0,0,3,3,3,3,3,0,0,0,0,0,0],[0,0,3,3,3,3,3,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0],[9,0,9,0,9,0,9,0,9,0,9,0,9],[0,0,0,0,0,0,0,0,0,0,0,0,0]],"output":[[0,0,3,3,3,3,3,0,0,0,0,0,0],[0,0,3,3,3,3,3,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0],[9,0,9,0,9,0,9,0,9,0,9,0,9],[0,0,0,0,0,0,0,0,0,0,0,0,0]]},{"input":[[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0],[5,0,5,0,5,0,5,0,5,0,5,0],[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,5,5,5,0,0,5,5,5,0,0],[0,0,5,5,5,0,0,5,5,5,0,0]],"output":[[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0],[5,0,5,0,5,0,5,0,5,0,5,0],[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0]]}]}
"""

# Load JSON data
data = json.loads(puzzle_json)

# Visualize training examples
for i, example in enumerate(data["train"]):
    input_grid = np.array(example["input"])
    output_grid = np.array(example["output"])
    
    visualize_grid(input_grid, title=f"Training Input {i+1}", str_filename=f"arc_train1_input{i+1}.png")
    visualize_grid(output_grid, title=f"Training Output {i+1}", str_filename=f"arc_train_output{i+1}.png")

# Visualize test examples
for i, example in enumerate(data["test"]):
    input_grid = np.array(example["input"])
    output_grid = np.array(example["output"])

    visualize_grid(grid=input_grid, title=f"Test input{i+1}", str_filename=f"arc_test_input{i+1}.png")
    visualize_grid(grid=output_grid, title=f"Test output{i+1}", str_filename=f"arc_test_output{i+1}.png")